# docker-compose.yml
version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: rails_postgres
    environment:
      POSTGRES_DB: myapp_development
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - rails_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache/Session Store
  redis:
    image: redis:7-alpine
    container_name: rails_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - rails_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Rails Application
  web:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    container_name: rails_app
    command: >
      bash -c "
        bundle config set --local deployment false &&
        bundle config set --local path /usr/local/bundle &&
        bundle config set --local without '' &&
        bundle install &&
        bundle exec rails db:prepare &&
        bundle exec rails server -b 0.0.0.0"
    volumes:
      - .:/app
      - node_modules:/app/node_modules
      - bundle_cache:/usr/local/bundle
      - rails_storage:/app/storage
    ports:
      - "3000:3000"
    environment:
      - RAILS_ENV=development
      - DATABASE_URL=postgresql://postgres:password@db:5432/myapp_development
      - REDIS_URL=redis://redis:6379/0
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - rails_network
    stdin_open: true
    tty: true

  # Sidekiq Background Jobs
  sidekiq:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    container_name: rails_sidekiq
    command: >
      bash -c "
        bundle config set --local deployment false &&
        bundle config set --local path /usr/local/bundle &&
        bundle config set --local without '' &&
        bundle install &&
        bundle exec sidekiq"
    volumes:
      - .:/app
      - bundle_cache:/usr/local/bundle
      - rails_storage:/app/storage
    environment:
      - RAILS_ENV=development
      - DATABASE_URL=postgresql://postgres:password@db:5432/myapp_development
      - REDIS_URL=redis://redis:6379/0
      - RAILS_MASTER_KEY=${RAILS_MASTER_KEY}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - rails_network

volumes:
  postgres_data:
  redis_data:
  node_modules:
  bundle_cache:
  rails_storage:

networks:
  rails_network:
    driver: bridge