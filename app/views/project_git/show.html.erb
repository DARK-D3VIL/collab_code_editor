<% content_for :title, "Git Commit Graph" %>

<div class="container-fluid p-0">
  <div class="row g-0">

    <!-- Sidebar -->
    <%= render 'partials/git_sidebar' %>

    <!-- Main Content -->
    <main class="col-md-9 ms-sm-auto col-lg-10 px-md-5 py-4 bg-light min-vh-100">
      <!-- Mobile Toggle Button -->
      <div class="d-md-none mb-3">
        <button class="btn btn-outline-primary w-100" type="button" data-bs-toggle="collapse" data-bs-target="#sidebarMenu">
          <i class="bi bi-list"></i> Toggle Menu
        </button>
      </div>

      <h2 class="mb-4">Git Commit Graph</h2>

      <div class="card shadow-sm">
        <div class="card-body">
          <div id="gitGraph" class="git-graph-container"></div>
        </div>
      </div>
    </main>
  </div>
</div>

<!-- CSS -->
<style>
  .sidebar {
    height: 100vh;
    overflow-y: auto;
    background-color: #ffffff;
    box-shadow: inset -1px 0 0 rgba(0, 0, 0, 0.1);
  }

  .sidebar .nav-link {
    color: #333;
    font-weight: 500;
    border-left: 4px solid transparent;
    transition: background-color 0.2s, border-color 0.2s;
    padding: 0.75rem 1rem;
    border-radius: 4px;
  }

  .sidebar .nav-link:hover {
    background-color: #f1f3f5;
    border-left-color: #0d6efd;
  }

  .sidebar .nav-link.active {
    color: #0d6efd;
    background-color: #e9f3ff;
    border-left: 4px solid #0d6efd;
  }
</style>

<!-- GitGraphJS Script -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const graphContainer = document.getElementById("gitGraph");
    const gitgraph = GitgraphJS.createGitgraph(graphContainer, {
      template: GitgraphJS.templateExtend(GitgraphJS.TemplateName.metro, {
        colors: ["#0d6efd", "#20c997", "#fd7e14"],
        branch: {
          lineWidth: 4,
          spacingX: 50,
        },
        commit: {
          spacingY: 40,
          dot: {
            size: 6,
          },
          message: {
            displayAuthor: true,
            displayHash: true,
            font: "normal 12pt sans-serif",
          },
        },
      }),
    });

    const branches = {};
    const commits = <%= raw @graph_commits.to_json %>;

    commits.forEach(commit => {
      const branchName = commit.branch;

      if (!branches[branchName]) {
        if (commit.parents.length === 0) {
          branches[branchName] = gitgraph.branch(branchName);
        } else {
          const parentCommit = commits.find(c => c.sha === commit.parents[0]);
          const parentBranch = parentCommit ? parentCommit.branch : "main";
          branches[branchName] = branches[parentBranch]
            ? branches[parentBranch].branch(branchName)
            : gitgraph.branch(branchName);
        }
      }

      branches[branchName].commit({
        subject: commit.message,
        author: commit.author,
        hash: commit.sha.slice(0, 7),
      });
    });
  });
</script>
